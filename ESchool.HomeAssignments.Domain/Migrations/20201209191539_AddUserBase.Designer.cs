// <auto-generated />
using System;
using ESchool.HomeAssignments.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ESchool.HomeAssignments.Domain.Migrations
{
    [DbContext(typeof(HomeAssignmentsContext))]
    [Migration("20201209191539_AddUserBase")]
    partial class AddUserBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.ClassRegisterData.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.ClassRegisterData.GroupStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("GroupStudents");
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.ClassRegisterData.GroupTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeacherId");

                    b.ToTable("GroupTeachers");
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.ClassRegisterData.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LessonNumber")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HomeWorkSolutionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeWorkSolutionId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.HomeWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Optional")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("HomeWorks");
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.HomeWorkReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeWorkSolutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Outcome")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReviewerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeWorkSolutionId")
                        .IsUnique();

                    b.HasIndex("ReviewerId");

                    b.ToTable("HomeWorkReviews");
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.HomeWorkSolution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HomeWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TurnInDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HomeWorkId");

                    b.HasIndex("StudentId");

                    b.ToTable("HomeWorkSolutions");
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.Users.UserBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserBase");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UserBase");
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.Users.Student", b =>
                {
                    b.HasBaseType("ESchool.HomeAssignments.Domain.Entities.Users.UserBase");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.Users.Teacher", b =>
                {
                    b.HasBaseType("ESchool.HomeAssignments.Domain.Entities.Users.UserBase");

                    b.HasDiscriminator().HasValue("Teacher");
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.ClassRegisterData.GroupStudent", b =>
                {
                    b.HasOne("ESchool.HomeAssignments.Domain.Entities.ClassRegisterData.Group", "Group")
                        .WithMany("GroupStudents")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESchool.HomeAssignments.Domain.Entities.Users.Student", "Student")
                        .WithMany("GroupStudents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.ClassRegisterData.GroupTeacher", b =>
                {
                    b.HasOne("ESchool.HomeAssignments.Domain.Entities.ClassRegisterData.Group", "Group")
                        .WithMany("GroupTeachers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESchool.HomeAssignments.Domain.Entities.Users.Teacher", "Teacher")
                        .WithMany("GroupTeachers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.ClassRegisterData.Lesson", b =>
                {
                    b.HasOne("ESchool.HomeAssignments.Domain.Entities.ClassRegisterData.Group", "Group")
                        .WithMany("Lessons")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.File", b =>
                {
                    b.HasOne("ESchool.HomeAssignments.Domain.Entities.HomeWorkSolution", "HomeWorkSolution")
                        .WithMany("Files")
                        .HasForeignKey("HomeWorkSolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.HomeWork", b =>
                {
                    b.HasOne("ESchool.HomeAssignments.Domain.Entities.ClassRegisterData.Lesson", "Lesson")
                        .WithMany("HomeWorks")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.HomeWorkReview", b =>
                {
                    b.HasOne("ESchool.HomeAssignments.Domain.Entities.HomeWorkSolution", "HomeWorkSolution")
                        .WithOne("HomeWorkReview")
                        .HasForeignKey("ESchool.HomeAssignments.Domain.Entities.HomeWorkReview", "HomeWorkSolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESchool.HomeAssignments.Domain.Entities.Users.Teacher", "Reviewer")
                        .WithMany()
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ESchool.HomeAssignments.Domain.Entities.HomeWorkSolution", b =>
                {
                    b.HasOne("ESchool.HomeAssignments.Domain.Entities.HomeWork", "HomeWork")
                        .WithMany("Solutions")
                        .HasForeignKey("HomeWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESchool.HomeAssignments.Domain.Entities.Users.Student", "Student")
                        .WithMany("Solutions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
